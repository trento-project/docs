name: Validate user facing documentation

on:
  push:
    paths:
      - 'trento/DC-*'
      - 'trento/xml/**'
      - 'trento/adoc/**'
      - 'trento/images/src/**'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - 'trento/DC-*'
      - 'trento/xml/**'
      - 'trento/adoc/**'
      - 'trento/images/src/**'
  workflow_dispatch:

jobs:
  select-dc-files:
    runs-on: ubuntu-latest
    outputs:
      validate-list: ${{ steps.select-dc-validate.outputs.dc-list }}
      build-list: ${{ steps.select-dc-build.outputs.dc-list }}
      allow-build: ${{ steps.select-dc-build.outputs.allow-build }}
      relevant-branches: ${{ steps.select-dc-build.outputs.relevant-branches }}
    steps:
      - uses: actions/checkout@v4

      - name: Checking basic soundness of DC files
        uses: openSUSE/doc-ci@gha-select-dcs
        with:
          mode: soundness

      - name: Selecting DC files to validate
        id: select-dc-validate
        uses: openSUSE/doc-ci@gha-select-dcs
        with:
          mode: list-validate

      - name: Selecting DC files to build
        id: select-dc-build
        uses: openSUSE/doc-ci@gha-select-dcs
        with:
          mode: list-build
          original-org: trento-project

  validate:
    runs-on: ubuntu-latest
    needs: select-dc-files
    strategy:
      # don't cancel all validation runners when one of them fails, we want full results
      fail-fast: false
      matrix:
        dc-files: ${{ fromJson(needs.select-dc-files.outputs.validate-list) }}
    steps:
      - uses: actions/checkout@v4
      - name: Validating DC file(s) ${{ matrix.dc-files }}
        uses: openSUSE/doc-ci@gha-validate
        with:
          dc-files: ${{ matrix.dc-files }}